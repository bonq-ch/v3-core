/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SwapRouter, SwapRouterInterface } from "../SwapRouter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Debug",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "SwapAttempted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "SwapFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "step",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611828806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063f593b25c14610046578063f8a8fd6d1461005b578063fa461e3314610079575b600080fd5b610059610054366004610e08565b61008c565b005b610063610a77565b604051610070919061111b565b60405180910390f35b610059610087366004610ea1565b610a7d565b7ff5d59af4353d88990f56a96db14116f1482b46799d201752dceece12d60ad1cf85858585856040516100c39594939291906110e8565b60405180910390a1428110156100f45760405162461bcd60e51b81526004016100eb9061158a565b60405180910390fd5b6001600160a01b03851661011a5760405162461bcd60e51b81526004016100eb9061164f565b6000831161013a5760405162461bcd60e51b81526004016100eb906116e4565b6000846101b757856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b29190610de5565b610228565b856001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610de5565b90506000856102a757866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561026a57600080fd5b505afa15801561027e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a29190610de5565b610318565b866001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610de5565b90506001600160a01b0382161580159061033a57506001600160a01b03811615155b6103565760405162461bcd60e51b81526004016100eb906111a5565b7fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c78282333060405160200161038e94939291906110bd565b60408051601f19818403018152908290526103a891611422565b60405180910390a1604051636eb1769f60e11b81526000906001600160a01b0384169063dd62ed3e906103e19033903090600401610ffe565b60206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190610f87565b90506000836001600160a01b03166370a08231336040518263ffffffff1660e01b81526004016104619190610fea565b60206040518083038186803b15801561047957600080fd5b505afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610f87565b90507fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c782826040516020016104e7929190611126565b60408051601f19818403018152908290526105019161150c565b60405180910390a1868210156105295760405162461bcd60e51b81526004016100eb90611281565b868110156105495760405162461bcd60e51b81526004016100eb906112b8565b6040516323b872dd60e01b81526000906001600160a01b038616906323b872dd9061057c90339030908d90600401611018565b602060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610e62565b9050806105ed5760405162461bcd60e51b81526004016100eb90611213565b7fe39f7566a882c4340b30d56efc1a2f6ce830dd4b4e4ed416a96631d168669ee28533308b6040516106229493929190611147565b60405180910390a1604051636eb1769f60e11b815288906001600160a01b0387169063dd62ed3e9061065a9030908f90600401610ffe565b60206040518083038186803b15801561067257600080fd5b505afa158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa9190610f87565b10156107955760405163095ea7b360e01b81526000906001600160a01b0387169063095ea7b3906106e3908e9060001990600401611081565b602060405180830381600087803b1580156106fd57600080fd5b505af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107359190610e62565b9050806107545760405162461bcd60e51b81526004016100eb906114a0565b7fe39f7566a882c4340b30d56efc1a2f6ce830dd4b4e4ed416a96631d168669ee286308d60001960405161078b94939291906113c4565b60405180910390a1505b60006040518060600160405280876001600160a01b03168152602001866001600160a01b03168152602001336001600160a01b031681525090507fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c781604051602001610801919061171b565b60408051601f198184030181529082905261081b91611608565b60405180910390a16001600160a01b03881661085a57896108505773fffd8963efd1fc6a506488495d951d5263988d25610857565b6401000276a45b97505b8a6001600160a01b031663128acb08338c8c8c8660405160200161087e919061171b565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016108ad95949392919061103c565b6040805180830381600087803b1580156108c657600080fd5b505af19250505080156108f6575060408051601f3d908101601f191682019092526108f391810190610e7e565b60015b610a1257610902611750565b8061090d575061095e565b7f4ecb9b6d2e2efee3f1b1b86927f5895fc3f627ac91d5ebfe344df8ae1eec07238160405161093c9190611134565b60405180910390a18060405162461bcd60e51b81526004016100eb9190611134565b3d808015610988576040519150601f19603f3d011682016040523d82523d6000602084013e61098d565b606091505b507f4ecb9b6d2e2efee3f1b1b86927f5895fc3f627ac91d5ebfe344df8ae1eec07236040516109bb90611553565b60405180910390a17fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c7816040516109f29190611336565b60405180910390a160405162461bcd60e51b81526004016100eb906114d7565b7fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c78282604051602001610a46929190611126565b60408051601f1981840301815290829052610a60916115c1565b60405180910390a150505050505050505050505050565b60015b90565b7fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c78484604051602001610ab1929190611126565b60408051601f1981840301815290829052610acb9161137d565b60405180910390a16000841380610ae25750600083135b610afe5760405162461bcd60e51b81526004016100eb9061124a565b6000610b0c82840184610f1c565b805160208083015160408085015190519495507fc9df7fb61446be8aea309e9a6e0363534152332665088f23d7016d989a4ce7c794610b4c94930161109a565b60408051601f1981840301815290829052610b66916112ef565b60405180910390a16000336001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610ba957600080fd5b505afa158015610bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be19190610de5565b90506000336001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1e57600080fd5b505afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c569190610de5565b905082600001516001600160a01b0316826001600160a01b0316148015610c92575082602001516001600160a01b0316816001600160a01b0316145b80610cc9575082602001516001600160a01b0316826001600160a01b0316148015610cc9575082516001600160a01b038281169116145b610ce55760405162461bcd60e51b81526004016100eb906111dc565b6000806000891315610cfb575082905087610d01565b50819050865b7fe39f7566a882c4340b30d56efc1a2f6ce830dd4b4e4ed416a96631d168669ee282303384604051610d369493929190611686565b60405180910390a160405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90610d6c9033908590600401611081565b602060405180830381600087803b158015610d8657600080fd5b505af1158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190610e62565b610dda5760405162461bcd60e51b81526004016100eb90611469565b505050505050505050565b600060208284031215610df6578081fd5b8151610e01816117f5565b9392505050565b600080600080600060a08688031215610e1f578081fd5b8535610e2a816117f5565b94506020860135610e3a8161180d565b9350604086013592506060860135610e51816117f5565b949793965091946080013592915050565b600060208284031215610e73578081fd5b8151610e018161180d565b60008060408385031215610e90578182fd5b505080516020909101519092909150565b60008060008060608587031215610eb6578384fd5b8435935060208501359250604085013567ffffffffffffffff80821115610edb578384fd5b818701915087601f830112610eee578384fd5b813581811115610efc578485fd5b886020828501011115610f0d578485fd5b95989497505060200194505050565b600060608284031215610f2d578081fd5b6040516060810181811067ffffffffffffffff82111715610f4a57fe5b6040528235610f58816117f5565b81526020830135610f68816117f5565b60208201526040830135610f7b816117f5565b60408201529392505050565b600060208284031215610f98578081fd5b5051919050565b60008151808452815b81811015610fc457602081850181015186830182015201610fa8565b81811115610fd55782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a0608083015261107660a0830184610f9f565b979650505050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b039586168152931515602085015260408401929092529092166060820152608081019190915260a00190565b901515815260200190565b918252602082015260400190565b600060208252610e016020830184610f9f565b60a08082526012908201527f5472616e736665722066726f6d2075736572000000000000000000000000000060c08201526001600160a01b039485166020820152928416604084015292166060820152608081019190915260e00190565b6020808252600e908201527f496e76616c696420746f6b656e73000000000000000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c69642063616c6c6261636b00000000000000000000000000000000604082015260600190565b6020808252600f908201527f5472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b6020808252600f908201527f496e76616c696420616d6f756e74730000000000000000000000000000000000604082015260600190565b60208082526016908201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604082015260600190565b60208082526014908201527f496e73756666696369656e742062616c616e6365000000000000000000000000604082015260600190565b600060408252601560408301527f4465636f6465642063616c6c6261636b20646174610000000000000000000000606083015260806020830152610e016080830184610f9f565b600060408252601460408301527f4c6f772d6c6576656c206572726f722064617461000000000000000000000000606083015260806020830152610e016080830184610f9f565b600060408252601160408301527f43616c6c6261636b207265636569766564000000000000000000000000000000606083015260806020830152610e016080830184610f9f565b60a0808252600c908201527f417070726f766520706f6f6c000000000000000000000000000000000000000060c08201526001600160a01b039485166020820152928416604084015292166060820152608081019190915260e00190565b600060408252600f60408301527f546f6b656e206164647265737365730000000000000000000000000000000000606083015260806020830152610e016080830184610f9f565b60208082526015908201527f546f6b656e207472616e73666572206661696c65640000000000000000000000604082015260600190565b6020808252600f908201527f417070726f76616c206661696c65640000000000000000000000000000000000604082015260600190565b6020808252818101527f53776170206661696c65642077697468206c6f772d6c6576656c206572726f72604082015260600190565b600060408252601560408301527f416c6c6f77616e636520616e642062616c616e63650000000000000000000000606083015260806020830152610e016080830184610f9f565b6020808252600f908201527f4c6f772d6c6576656c206572726f720000000000000000000000000000000000604082015260600190565b60208082526013908201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604082015260600190565b600060408252600f60408301527f53776170207375636365737366756c0000000000000000000000000000000000606083015260806020830152610e016080830184610f9f565b600060408252601660408301527f43616c6c6261636b206461746120707265706172656400000000000000000000606083015260806020830152610e016080830184610f9f565b6020808252600c908201527f496e76616c696420706f6f6c0000000000000000000000000000000000000000604082015260600190565b60a08082526010908201527f43616c6c6261636b207061796d656e740000000000000000000000000000000060c08201526001600160a01b039485166020820152928416604084015292166060820152608081019190915260e00190565b60208082526017908201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604082015260600190565b81516001600160a01b039081168252602080840151821690830152604092830151169181019190915260600190565b60e01c90565b600060443d101561176057610a7a565b600481823e6308c379a0611774825161174a565b1461177e57610a7a565b6040513d600319016004823e80513d67ffffffffffffffff81602484011181841117156117ae5750505050610a7a565b828401925082519150808211156117c85750505050610a7a565b503d830160208284010111156117e057505050610a7a565b601f01601f1916810160200160405291505090565b6001600160a01b038116811461180a57600080fd5b50565b801515811461180a57600080fdfea164736f6c6343000706000a";

type SwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapRouter__factory extends ContractFactory {
  constructor(...args: SwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapRouter__factory {
    return super.connect(runner) as SwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapRouterInterface {
    return new Interface(_abi) as SwapRouterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapRouter {
    return new Contract(address, _abi, runner) as unknown as SwapRouter;
  }
}
